[tox]
envlist = 
    begincoverage,py{37,38,39}-dj{22,30,31,32,40}-{standard,djangocte},endcoverage,lint
skip_missing_interpreters = true
isolated_build = true

[base]
deps=
    .
    coverage
    dj22: Django>=2.2,<3.0
    dj30: Django>=3.0,<3.1
    dj31: Django>=3.1,<3.2
    dj32: Django>=3.2,<3.3

[testenv]
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/tests/unit
commands =
    standard: coverage run -p \
    standard:   --source src/django_dag \
    standard:   {envdir}/bin/django-admin test \
    standard:   --settings tests.unit.settings.standard testapp.tests
    djangocte: coverage run -p \
    djangocte:  --source {envsitepackagesdir}/django_dag \
    djangocte:  {envdir}/bin/django-admin test \
    djangocte:  --settings tests.unit.settings.djangocte testapp.tests

depends=
    {py36,py37,py38,py39}: begincoverage
    endcoverage: py{36,37,38,39}-dj{22,30,31,32}-{standard,djangocte}

deps=
    {[base]deps}
    djangocte: .[cte]

[testenv:begincoverage]
deps=coverage
commands = coverage erase

[testenv:endcoverage]
deps=coverage
commands =
    coverage combine
    coverage report
    coverage html

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python
changedir = docs
deps =
    .
    .[cte]
    Sphinx
    sphinx_issues
commands =
    sphinx-apidoc -o apidocs ../src/django_dag
    sphinx-build -d "{toxworkdir}/docs_doctree" . "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:lint]
skip_install = true
deps = flake8
commands = flake8

[flake8]
exclude = .tox,.git,__pycache__,.eggs,
ignore =
    # Ignore "and" / "or" at start of line.
    W503
    W504
    # Ignore "do not assign a lambda expression, use a def".
    E731
    E121
    E128
    E126
max-line-length = 120
